/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import model.Encounter;
import model.Patient;
import model.PatientDirectory;
import model.SystemM;
import model.VitalSigns;

/**
 *
 * @author nidhitiwari
 */
public class MainJFrame extends javax.swing.JFrame {
    
    SystemM system;
    PatientDirectory patientDetails;

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        system = new SystemM();
        addMultiplePatient();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        btnAddDocVisit = new javax.swing.JButton();
        btnViewCommunity = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAddDocVisit.setBackground(new java.awt.Color(0, 153, 255));
        btnAddDocVisit.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnAddDocVisit.setForeground(new java.awt.Color(255, 255, 255));
        btnAddDocVisit.setText("Add Doctor Visit");
        btnAddDocVisit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDocVisitActionPerformed(evt);
            }
        });

        btnViewCommunity.setBackground(new java.awt.Color(0, 153, 255));
        btnViewCommunity.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnViewCommunity.setForeground(new java.awt.Color(255, 255, 255));
        btnViewCommunity.setText("Community Health Assessment");
        btnViewCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCommunityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAddDocVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnViewCommunity)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAddDocVisit, btnViewCommunity});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(btnAddDocVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(btnViewCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(170, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAddDocVisit, btnViewCommunity});

        splitPane.setLeftComponent(jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 605, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 468, Short.MAX_VALUE)
        );

        splitPane.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(splitPane))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddDocVisitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDocVisitActionPerformed
        DoctorVisit doctorPanel = new DoctorVisit(system);
        splitPane.setRightComponent(doctorPanel);
    }//GEN-LAST:event_btnAddDocVisitActionPerformed

    private void btnViewCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCommunityActionPerformed
        // TODO add your handling code here:
        ViewJPanel viewPanel = new ViewJPanel(system);
        splitPane.setRightComponent(viewPanel);
    }//GEN-LAST:event_btnViewCommunityActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    
    public void addMultiplePatient() {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM/dd/yyyy");
            LocalDate localDate = LocalDate.parse("12/12/1990", formatter);
            java.util.Date date=new java.util.Date(); 
            LocalDate dob = localDate;           
            Patient patient1 = new Patient(
            "Annie", 
            "Kalpa", 
            dob, 
            "2051", 
            "Beacon Hill",
            "Boston",  
            system.getPatientDirectory().size() + 1,
            system.getPersonDirectory().size() + 1
        );
                    
        Encounter encounter = null;
        VitalSigns vitals = new VitalSigns();
        vitals.setBloodPressure(Integer.parseInt("125"));
        vitals.setRespiratoryRate(Integer.parseInt("17"));
        vitals.setHeartRate(Integer.parseInt("110"));
        vitals.setWeightInKilos(Float.parseFloat("90"));
        encounter = new Encounter(vitals);
        patient1.getEncounterHistory().recordEncounter(encounter);
        
        system.addPatient(patient1);
        
        LocalDate localDate2 = LocalDate.parse("12/11/2000", formatter);
        LocalDate dob2 = localDate2;           
        Patient patient2 = new Patient(
        "Mike", 
        "Tyso", 
        dob2, 
        "1360", 
        "Dorchester",
        "Boston",  
        system.getPatientDirectory().size() + 1,
        system.getPersonDirectory().size() + 1
        );

        Encounter encounter2 = null;
        VitalSigns vitals2 = new VitalSigns();
        vitals2.setBloodPressure(Integer.parseInt("130"));
        vitals2.setRespiratoryRate(Integer.parseInt("20"));
        vitals2.setHeartRate(Integer.parseInt("120"));
        vitals2.setWeightInKilos(Float.parseFloat("70"));
        encounter2 = new Encounter(vitals2);
        patient2.getEncounterHistory().recordEncounter(encounter2);
        
        system.addPatient(patient2);
        
        LocalDate localDate3 = LocalDate.parse("12/11/2010", formatter);
        LocalDate dob3 = localDate3;           
        Patient patient3 = new Patient(
        "Chris", 
        "Royal", 
        dob3, 
        "1021", 
        "Dorchester",
        "Boston",  
        system.getPatientDirectory().size() + 1,
        system.getPersonDirectory().size() + 1
        );

        Encounter encounter3 = null;
        VitalSigns vitals3 = new VitalSigns();
        vitals3.setBloodPressure(Integer.parseInt("100"));
        vitals3.setRespiratoryRate(Integer.parseInt("15"));
        vitals3.setHeartRate(Integer.parseInt("102"));
        vitals3.setWeightInKilos(Float.parseFloat("55"));
        encounter3 = new Encounter(vitals3);
        patient3.getEncounterHistory().recordEncounter(encounter3);
        
        system.addPatient(patient3);
        
        LocalDate localDate4 = LocalDate.parse("12/11/1880", formatter);
        LocalDate dob4 = localDate4;           
        Patient patient4 = new Patient(
        "Jane", 
        "Sherman", 
        dob4, 
        "1125", 
        "Beacon Hill",
        "Boston",  
        system.getPatientDirectory().size() + 1,
        system.getPersonDirectory().size() + 1
        );

        Encounter encounter4 = null;
        VitalSigns vitals4 = new VitalSigns();
        vitals4.setBloodPressure(Integer.parseInt("128"));
        vitals4.setRespiratoryRate(Integer.parseInt("17"));
        vitals4.setHeartRate(Integer.parseInt("115"));
        vitals4.setWeightInKilos(Float.parseFloat("68"));
        encounter4 = new Encounter(vitals4);
        patient4.getEncounterHistory().recordEncounter(encounter4);
        
        system.addPatient(patient4);
        
        LocalDate localDate5 = LocalDate.parse("12/11/2016", formatter);
        LocalDate dob5 = localDate5;           
        Patient patient5 = new Patient(
        "Jenny", 
        "Rich", 
        dob5, 
        "1205", 
        "Dorchester",
        "Boston",  
        system.getPatientDirectory().size() + 1,
        system.getPersonDirectory().size() + 1
        );

        Encounter encounter5 = null;
        VitalSigns vitals5 = new VitalSigns();
        vitals5.setBloodPressure(Integer.parseInt("80"));
        vitals5.setRespiratoryRate(Integer.parseInt("15"));
        vitals5.setHeartRate(Integer.parseInt("70"));
        vitals5.setWeightInKilos(Float.parseFloat("21"));
        encounter5 = new Encounter(vitals5);
        patient5.getEncounterHistory().recordEncounter(encounter5);
        
        system.addPatient(patient5);
        
        LocalDate localDate6 = LocalDate.parse("10/11/2011", formatter);
        LocalDate dob6 = localDate6;
        Patient patient6 = new Patient(
        "Alexis", 
        "Ray", 
        dob6, 
        "1202", 
        "Dorchester",
        "Boston",  
        system.getPatientDirectory().size() + 1,
        system.getPersonDirectory().size() + 1
        );

        Encounter encounter6 = null;
        VitalSigns vitals6 = new VitalSigns();
        vitals6.setBloodPressure(Integer.parseInt("95"));
        vitals6.setRespiratoryRate(Integer.parseInt("15"));
        vitals6.setHeartRate(Integer.parseInt("70"));
        vitals6.setWeightInKilos(Float.parseFloat("55"));
        encounter6 = new Encounter(vitals6);
        patient6.getEncounterHistory().recordEncounter(encounter6);
        
        system.addPatient(patient6);
        
        LocalDate localDate7 = LocalDate.parse("10/11/2009", formatter);
        LocalDate dob7 = localDate7;
        Patient patient7 = new Patient(
        "David", 
        "Rosly", 
        dob7, 
        "1400", 
        "Beacon Hill",
        "Boston",  
        system.getPatientDirectory().size() + 1,
        system.getPersonDirectory().size() + 1
        );

        Encounter encounter7 = null;
        VitalSigns vitals7 = new VitalSigns();
        vitals7.setBloodPressure(Integer.parseInt("95"));
        vitals7.setRespiratoryRate(Integer.parseInt("15"));
        vitals7.setHeartRate(Integer.parseInt("70"));
        vitals7.setWeightInKilos(Float.parseFloat("40"));
        encounter7 = new Encounter(vitals7);
        patient7.getEncounterHistory().recordEncounter(encounter7);
        
        system.addPatient(patient7);
        
        LocalDate localDate8 = LocalDate.parse("10/11/2017", formatter);
        LocalDate dob8 = localDate8;
        Patient patient8 = new Patient(
        "Diana", 
        "Pent", 
        dob8, 
        "1101", 
        "Beacon Hill",
        "Boston",  
        system.getPatientDirectory().size() + 1,
        system.getPersonDirectory().size() + 1
        );

        Encounter encounter8 = null;
        VitalSigns vitals8 = new VitalSigns();
        vitals8.setBloodPressure(Integer.parseInt("70"));
        vitals8.setRespiratoryRate(Integer.parseInt("31"));
        vitals8.setHeartRate(Integer.parseInt("100"));
        vitals8.setWeightInKilos(Float.parseFloat("19"));
        encounter8 = new Encounter(vitals8);
        patient8.getEncounterHistory().recordEncounter(encounter8);
        
        system.addPatient(patient8);
        
        LocalDate localDate9 = LocalDate.parse("10/11/2005", formatter);
        LocalDate dob9 = localDate9;
        Patient patient9 = new Patient(
        "Ravi", 
        "Gyan", 
        dob9, 
        "3105", 
        "Dorchester",
        "Boston",  
        system.getPatientDirectory().size() + 1,
        system.getPersonDirectory().size() + 1
        );

        Encounter encounter9 = null;
        VitalSigns vitals9 = new VitalSigns();
        vitals9.setBloodPressure(Integer.parseInt("88"));
        vitals9.setRespiratoryRate(Integer.parseInt("15"));
        vitals9.setHeartRate(Integer.parseInt("90"));
        vitals9.setWeightInKilos(Float.parseFloat("60"));
        encounter9 = new Encounter(vitals9);
        patient9.getEncounterHistory().recordEncounter(encounter9);
        
        system.addPatient(patient9);
        
        LocalDate localDate10 = LocalDate.parse("10/11/1995", formatter);
        LocalDate dob10 = localDate10;
        Patient patient10 = new Patient(
        "Gweth", 
        "Mint", 
        dob10, 
        "211", 
        "Charlestown",
        "Boston",  
        system.getPatientDirectory().size() + 1,
        system.getPersonDirectory().size() + 1
        );

        Encounter encounter10 = null;
        VitalSigns vitals10 = new VitalSigns();
        vitals10.setBloodPressure(Integer.parseInt("96"));
        vitals10.setRespiratoryRate(Integer.parseInt("15"));
        vitals10.setHeartRate(Integer.parseInt("102"));
        vitals10.setWeightInKilos(Float.parseFloat("90"));
        encounter10 = new Encounter(vitals10);
        patient10.getEncounterHistory().recordEncounter(encounter10);
        
        system.addPatient(patient10);
        
        LocalDate localDate11 = LocalDate.parse("10/11/1999", formatter);
        LocalDate dob11 = localDate11;
        Patient patient11 = new Patient(
        "Jerry", 
        "Kimsu", 
        dob11, 
        "410", 
        "Charlestown",
        "Boston",  
        system.getPatientDirectory().size() + 1,
        system.getPersonDirectory().size() + 1
        );

        Encounter encounter11 = null;
        VitalSigns vitals11 = new VitalSigns();
        vitals11.setBloodPressure(Integer.parseInt("94"));
        vitals11.setRespiratoryRate(Integer.parseInt("16"));
        vitals11.setHeartRate(Integer.parseInt("95"));
        vitals11.setWeightInKilos(Float.parseFloat("85"));
        encounter11 = new Encounter(vitals11);
        patient11.getEncounterHistory().recordEncounter(encounter11);
        
        system.addPatient(patient11);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDocVisit;
    private javax.swing.JButton btnViewCommunity;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSplitPane splitPane;
    // End of variables declaration//GEN-END:variables
}
