/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Patient;
import model.SystemM;

/**
 *
 * @author nidhitiwari
 */
public class ViewJPanel extends javax.swing.JPanel {

    SystemM system;
    /**
     * Creates new form ViewJPanel
     */
    public ViewJPanel(SystemM system) {
        initComponents();
        this.system = system;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewPatientDetails = new javax.swing.JTable();
        btnAbnormalBP = new javax.swing.JButton();
        scrollAbnormal = new javax.swing.JScrollPane();
        tblAbnormal = new javax.swing.JTable();
        btnAbnormalRespRate = new javax.swing.JButton();
        btnAbnormalHeartRate = new javax.swing.JButton();
        btnAbnormalWeight = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jButton2.setText("Abnormal Vital Heart Rate");

        tblViewPatientDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "First Name", "Last Name", "DOB", "House Number", "Community", "City", "Age Group"
            }
        ));
        jScrollPane1.setViewportView(tblViewPatientDetails);

        btnAbnormalBP.setBackground(new java.awt.Color(0, 153, 255));
        btnAbnormalBP.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        btnAbnormalBP.setText("Abnormal Blood Pressure");
        btnAbnormalBP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbnormalBPActionPerformed(evt);
            }
        });

        tblAbnormal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Community", "Count", "Vital Sign"
            }
        ));
        scrollAbnormal.setViewportView(tblAbnormal);

        btnAbnormalRespRate.setBackground(new java.awt.Color(0, 153, 255));
        btnAbnormalRespRate.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        btnAbnormalRespRate.setText("Abnormal Repiratory Rate");
        btnAbnormalRespRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbnormalRespRateActionPerformed(evt);
            }
        });

        btnAbnormalHeartRate.setBackground(new java.awt.Color(0, 153, 255));
        btnAbnormalHeartRate.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        btnAbnormalHeartRate.setText("Abnormal Heart Rate");
        btnAbnormalHeartRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbnormalHeartRateActionPerformed(evt);
            }
        });

        btnAbnormalWeight.setBackground(new java.awt.Color(0, 153, 255));
        btnAbnormalWeight.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        btnAbnormalWeight.setText("Abnormal Weight");
        btnAbnormalWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbnormalWeightActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("View Abnormal Vital Sign Per Community");

        jButton1.setText("Delete Patient");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(362, 362, 362)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAbnormalBP, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAbnormalHeartRate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAbnormalRespRate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAbnormalWeight))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 964, Short.MAX_VALUE)
                                .addComponent(scrollAbnormal)))))
                .addContainerGap(162, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAbnormalBP, btnAbnormalHeartRate, btnAbnormalRespRate, btnAbnormalWeight});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAbnormalBP, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAbnormalHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAbnormalRespRate, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAbnormalWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(scrollAbnormal, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAbnormalBP, btnAbnormalHeartRate, btnAbnormalRespRate, btnAbnormalWeight});

    }// </editor-fold>//GEN-END:initComponents

    private void btnAbnormalBPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbnormalBPActionPerformed
                HashMap communityPatientMap =  system.showAbnoramlBPPatients();
                DefaultTableModel model = (DefaultTableModel) tblAbnormal.getModel();
                model.setRowCount(0);

                   communityPatientMap.forEach((key, value) -> {
                   Object [] row = new Object[3];
                   row[0] = key;
                   row[1] = value;
                   row[2] = "Blood Pressure";
                   model.addRow(row);
                    });
    }//GEN-LAST:event_btnAbnormalBPActionPerformed

    private void btnAbnormalHeartRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbnormalHeartRateActionPerformed
                HashMap communityPatientMap =  system.showAbnoramlHeartPatients();
                DefaultTableModel model = (DefaultTableModel) tblAbnormal.getModel();
                model.setRowCount(0);

                   communityPatientMap.forEach((key, value) -> {
                   Object [] row = new Object[3];
                   row[0] = key;
                   row[1] = value;
                   row[2] = "Heart Rate";
                   model.addRow(row);

                });
    }//GEN-LAST:event_btnAbnormalHeartRateActionPerformed

    private void btnAbnormalRespRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbnormalRespRateActionPerformed
        HashMap communityPatientMap =  system.showAbnoramlRespiratoryPatients();
        DefaultTableModel model = (DefaultTableModel) tblAbnormal.getModel();
        model.setRowCount(0);

           communityPatientMap.forEach((key, value) -> {
           Object [] row = new Object[3];
           row[0] = key;
           row[1] = value;
           row[2] = "Respiratory Rate";
           model.addRow(row);

        });
    }//GEN-LAST:event_btnAbnormalRespRateActionPerformed

    private void btnAbnormalWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbnormalWeightActionPerformed
        HashMap communityPatientMap =  system.showAbnoramlWeightPatients();
        DefaultTableModel model = (DefaultTableModel) tblAbnormal.getModel();
        model.setRowCount(0);

           communityPatientMap.forEach((key, value) -> {
           Object [] row = new Object[3];
           row[0] = key;
           row[1] = value;
           row[2] = "Weight";
           model.addRow(row);

        });
    }//GEN-LAST:event_btnAbnormalWeightActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        int selectedRowIndex = tblViewPatientDetails.getSelectedRow();
        
        if(selectedRowIndex < 0) {  
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblViewPatientDetails.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);
        
        system.removePatient(selectedPatient);
        JOptionPane.showMessageDialog(this, "Patient Record deleted"); 
        
        populateTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void populateTable() {
    DefaultTableModel model = (DefaultTableModel) tblViewPatientDetails.getModel();
    model.setRowCount(0);
     java.lang.System.out.println(system.getPatientById(0));
    system.getPatientDirectory().forEach(patient -> {
        Object [] row = new Object[10];
        row[0] = patient;
        row[1] = patient.getFirstName();
        row[2] = patient.getLastName();
        row[3] = patient.getDateOfBirth().toString();
        row[4] = patient.getResidence().getHouseNumber();
        row[5] = patient.getResidence().getCommunityName();
        row[6] = patient.getResidence().getCityName();
        row[7] = patient.getAgeGroup().toString();

        model.addRow(row);
    });        

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbnormalBP;
    private javax.swing.JButton btnAbnormalHeartRate;
    private javax.swing.JButton btnAbnormalRespRate;
    private javax.swing.JButton btnAbnormalWeight;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane scrollAbnormal;
    private javax.swing.JTable tblAbnormal;
    private javax.swing.JTable tblViewPatientDetails;
    // End of variables declaration//GEN-END:variables
}
